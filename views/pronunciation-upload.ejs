<div class="max-w-4xl mx-auto px-4 py-6">
  <h1 class="text-2xl font-bold text-gray-900 mb-6">발음 교정</h1>

  <div class="bg-white shadow rounded-lg p-6">
    <form id="upload-form" enctype="multipart/form-data">
      <div class="mb-4">
        <label class="block text-sm font-medium text-gray-700 mb-2">제목</label>
        <input
          type="text"
          id="title-input"
          name="title"
          class="shadow-sm focus:ring-blue-500 focus:border-blue-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md p-2"
          required
        />
      </div>

      <div class="mb-6">
        <label class="block text-sm font-medium text-gray-700 mb-2">
          읽을 문장을 입력하세요
        </label>
        <textarea
          id="text-input"
          name="text"
          rows="4"
          class="shadow-sm focus:ring-blue-500 focus:border-blue-500 mt-1 block w-full sm:text-sm border border-gray-300 rounded-md p-2"
          required
        ></textarea>
      </div>

      <div class="mb-6">
        <label class="block text-sm font-medium text-gray-700 mb-2">
          발음 체크를 위한 음성 파일 업로드
        </label>
        <div
          class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md"
        >
          <div class="space-y-1 text-center">
            <svg
              class="mx-auto h-12 w-12 text-gray-400"
              stroke="currentColor"
              fill="none"
              viewBox="0 0 48 48"
            >
              <path
                d="M24 6c-4.4 0-8 3.6-8 8v12c0 4.4 3.6 8 8 8s8-3.6 8-8V14c0-4.4-3.6-8-8-8z"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
              <path
                d="M34 22v4c0 5.5-4.5 10-10 10s-10-4.5-10-10v-4"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
              <path
                d="M24 42v-6"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
              />
            </svg>
            <div class="flex text-sm text-gray-600">
              <label
                for="audio"
                class="relative cursor-pointer bg-white rounded-md font-medium text-blue-600 hover:text-blue-500 focus-within:outline-none"
              >
                <span>음성 파일 업로드</span>
                <input
                  id="audio"
                  name="audio"
                  type="file"
                  class="sr-only"
                  accept=".mp3,audio/mpeg"
                  required
                />
              </label>
            </div>
            <p class="text-xs text-gray-500">MP3 파일만 가능합니다</p>
            <p id="file-name" class="text-sm text-gray-600 mt-2"></p>
          </div>
        </div>
      </div>

      <div id="audio-player" class="mb-6 hidden">
        <label class="block text-sm font-medium text-gray-700 mb-2">
          업로드된 음성 파일
        </label>
        <audio id="audio-element" controls class="w-full">
          <source src="" type="audio/mp3" />
          브라우저가 오디오 재생을 지원하지 않습니다.
        </audio>
      </div>

      <div class="flex justify-end">
        <button
          type="submit"
          class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
        >
          분석하기
        </button>
      </div>
    </form>
  </div>

  <div
    id="loading-spinner"
    class="fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center hidden"
  >
    <div
      class="animate-spin rounded-full h-32 w-32 border-b-2 border-white"
    ></div>
  </div>
</div>

<script>
  document.getElementById("audio").addEventListener("change", (e) => {
    const file = e.target.files[0];
    if (file) {
      if (
        !file.type.includes("audio/mpeg") &&
        !file.type.includes("audio/mp3")
      ) {
        alert("MP3 파일만 업로드 가능합니다.");
        e.target.value = "";
        return;
      }

      document.getElementById("file-name").textContent = file.name;
      const audioPlayer = document.getElementById("audio-player");
      const audioElement = document.getElementById("audio-element");
      audioElement.src = URL.createObjectURL(file);
      audioPlayer.classList.remove("hidden");
    }
  });

  document
    .getElementById("upload-form")
    .addEventListener("submit", async (e) => {
      e.preventDefault();
      const spinner = document.getElementById("loading-spinner");
      spinner.classList.remove("hidden");

      const formData = new FormData();
      const audioFile = document.getElementById("audio").files[0];
      const title = document.getElementById("title-input").value;
      const text = document.getElementById("text-input").value;

      formData.append("audio", audioFile);
      formData.append("title", title);
      formData.append("text", text);

      try {
        const response = await fetch("/pronunciation", {
          method: "POST",
          body: formData,
        });

        if (response.ok) {
          const data = await response.json();
          console.log("Upload response:", data); // 응답 데이터 확인

          const params = new URLSearchParams({
            url: data.fileUrl || "",
            userText: data.userText || "", // 파라미터 이름 일치시키기
            aiText: data.aiText || "", // 파라미터 이름 일치시키기
          });

          const redirectUrl = "/pronunciation/result?" + params.toString();
          console.log("Redirecting to:", redirectUrl); // 리다이렉트 URL 확인
          window.location.href = redirectUrl;
        } else {
          throw new Error("Upload failed");
        }
      } catch (error) {
        console.error("Error:", error);
        alert("파일 업로드에 실패했습니다.");
      } finally {
        spinner.classList.add("hidden");
      }
    });
</script>
